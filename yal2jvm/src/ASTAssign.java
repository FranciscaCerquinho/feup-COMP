import javax.lang.model.element.VariableElement;

/* Generated By:JJTree: Do not edit this line. ASTAssign.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTAssign extends SimpleNode {

  public ASTAssign(int id) {
        super(id);
      }

  public ASTAssign(parserGrammar p, int id) {
    super(p, id);
  }

  @Override
  public int analyse(SymbolsTable currentTable){
    int returnValue;
    int b=0;
    boolean arg;
    System.out.println("Analyse Rhs of Assign");
    returnValue = jjtGetChild(1).analyseRhs(currentTable);
    System.out.println("Analyse Lhs of Assign");

    if(returnValue==1 || returnValue ==-1)
      arg=true;
    else
      arg=false;
    b=jjtGetChild(0).analyseLhs(currentTable, arg);
    if(b==-1 || returnValue==-1)
      return -1;

    return b;
  }

  @Override
  public int analyseContent(SymbolsTable currentTable){

    return analyse(currentTable);
  }

  public String convertToByteCodes(MapVariables data){
    String line = "";

    if(jjtGetChild(0).jjtGetChild(0).getId() != parserGrammarTreeConstants.JJTARRAYACCESS) {
      line += jjtGetChild(1).convertToByteCodes(data);
      line += jjtGetChild(0).convertToByteCodes(data);
      String[] aux = line.split("\n");
      if(aux.length==4){

        if(aux[0].contains("iload") && aux[1].contains("iconst") && aux[2].contains("iadd") && aux[3].contains("istore")){
          String[] varNumber = aux[0].split("_");
          String[] varNumber2 = aux[3].split("_");
          if(varNumber.length == 1){
            varNumber = aux[0].split(" ");
          }
          if(varNumber2.length == 1){
            varNumber2 = aux[3].split(" ");
          }
          if(varNumber[1].equals(varNumber2[1])){
            String[] constant = aux[1].split("_");
            line = "iinc " + varNumber[1] + " " + constant[1] + "\n";
          }
        }
      }
    }
    else{
      line += jjtGetChild(0).convertToByteCodes(data);
      line += jjtGetChild(1).convertToByteCodes(data);
      line+="iastore\n";
    }


    return line;
  }
}
/* JavaCC - OriginalChecksum=e20e022e8c7e693a216dbfcbaefa6bca (do not edit this line) */
