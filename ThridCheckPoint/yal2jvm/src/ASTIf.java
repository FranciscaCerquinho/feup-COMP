/* Generated By:JJTree: Do not edit this line. ASTIf.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTIf extends SimpleNode {

  public ASTIf(int id) {
    super(id);
  }

  public ASTIf(parserGrammar p, int id) {
    super(p, id);
  }

  @Override
  public int analyseContent(SymbolsTable currentTable){
    System.out.println("Analyse children of If");
    int b= 0;

    for(int i=0; i < jjtGetNumChildren();i++){
      if(jjtGetChild(i).analyse(currentTable)==-1)
        b=-1;
    }

    return b;
  }


  public String convertToByteCodes(MapVariables data){
    String line = "";

    if(jjtGetNumChildren() == 2) {
      for(int i = 0; i < jjtGetNumChildren(); i++){
        line += jjtGetChild(i).convertToByteCodes(data);
      }
    } else {
      for(int i = 0; i < jjtGetNumChildren(); i++){
        if(i == 2) {
          line +="goto loop" + data.loopCounter + "_next";
          line += "\nloop"+ data.loopCounter +"_end:\n";
        }
        line += jjtGetChild(i).convertToByteCodes(data);
      }
    }

    line += "loop" + data.loopCounter +"_next:" + "\n";

    data.loopCounter++;
    return line;
  }
}
/* JavaCC - OriginalChecksum=2ec96525784b2bcad433eadafd7c9b56 (do not edit this line) */
