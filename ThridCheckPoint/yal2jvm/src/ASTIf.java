/* Generated By:JJTree: Do not edit this line. ASTIf.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTIf extends SimpleNode {
  public ASTIf(int id) {
    super(id);
  }

  public ASTIf(parserGrammar p, int id) {
    super(p, id);
  }

  @Override
  public boolean analyseContent(SymbolsTable currentTable){
    System.out.println("Analyse children of If");

    for(int i=0; i < jjtGetNumChildren();i++){
      jjtGetChild(i).analyse(currentTable);
    }

    return true;
  }


  public String convertToByteCodes(MapVariables data, int loop_no){
    String line = "";

    String loopname="loop" + data.loopCounter;

    for(int i = 0; i < jjtGetNumChildren(); i++){
      if(jjtGetChild(i).equals("else")){
        loopname="loop" + data.loopCounter;
        line += jjtGetChild(i).convertToByteCodes(data, data.loopCounter);

      }
      else{
        line += jjtGetChild(i).convertToByteCodes(data, data.loopCounter);
      }
    }

    line += "\n";
    line += loopname + "_end:" + "\n";

    data.loopCounter++;
    return line;
  }
}
/* JavaCC - OriginalChecksum=2ec96525784b2bcad433eadafd7c9b56 (do not edit this line) */
