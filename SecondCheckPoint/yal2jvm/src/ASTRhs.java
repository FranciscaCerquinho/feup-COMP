/* Generated By:JJTree: Do not edit this line. ASTRhs.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTRhs extends SimpleNode {
  private String name;

    public ASTRhs(int id) {
      super(id);
    }

    public ASTRhs(parserGrammar p, int id) {
      super(p, id);
    }

    public String getName() {
  	  return name;
    }

    public void setName(String name) {
  	  this.name = name;
    }

    public String toString() {
  	  String test = super.toString();

  	  if(name != null)
  		  test += " " + name;

  	  return test;
    }

    @Override
    public boolean analyse(SymbolsTable currentTable){
      analyseContent(currentTable);

  		return true;
    }

    @Override
    public boolean analyseContent(SymbolsTable currentTable){
  		System.out.println("Analyse the children of Rhs");

      for(int i=0; i < jjtGetNumChildren();i++){
        jjtGetChild(i).analyse(currentTable);
      }

      return true;
    }

  	public boolean analyseRhs(SymbolsTable currentTable){
  		System.out.println("Analyse the right part of Rhs");

  			return jjtGetChild(0).analyseRhs(currentTable);
  	}

  /** Accept the visitor. **/
  public Object jjtAccept(parserGrammarVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=47394f5c433cee69d6cbb4f3a91d31fb (do not edit this line) */
