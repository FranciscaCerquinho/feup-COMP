/* Generated By:JJTree: Do not edit this line. ASTFunction.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTFunction extends SimpleNode {
	
	private String name;
	
  public ASTFunction(int id) {
    super(id);
  }

  public ASTFunction(parserGrammar p, int id) {
    super(p, id);
  }
  
  public String getName() {
	  return name;
  }
  
  public void setName(String name) {
	  this.name = name;
  }
  
  public String toString() {
	  String test;
	  
	  test = super.toString() + " " + name;
	  
	  return test;
  }

  @Override
  public boolean analyse(SymbolsTable currentTable){
    currentTable.putOnHashMap(new Symbol("Function",name));
    System.out.println("Function: ");
    System.out.println(currentTable);
    
    analyseContent(currentTable);
    return true;
  }
  
  @Override
  public boolean analyseContent(SymbolsTable currentTable){
    SymbolsTable symbolsTable = new SymbolsTable(currentTable);

    for(int i=0; i < jjtGetNumChildren();i++){
      jjtGetChild(i).analyse(symbolsTable);
    }

    return true;
  }

}
/* JavaCC - OriginalChecksum=d372bb0ab3490082923a78eab5b30c7c (do not edit this line) */
