/* Generated By:JJTree: Do not edit this line. ASTLhs.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTLhs extends SimpleNode {
  public ASTLhs(int id) {
      super(id);
    }

    public ASTLhs(parserGrammar p, int id) {
      super(p, id);
    }

    @Override
    public boolean analyseContent(SymbolsTable currentTable){
      System.out.println("Analyse children of Lhs");

      SymbolsTable symbolsTable = new SymbolsTable(currentTable);

      for(int i=0; i < jjtGetNumChildren();i++){
        jjtGetChild(i).analyse(symbolsTable);
      }

      return true;
    }

    public boolean analyseLhs(SymbolsTable currentTable, boolean value){
      System.out.println("Analyse the left part of Call");

      for(int i=0; i < jjtGetNumChildren();i++){
        jjtGetChild(i).analyseLhs(currentTable, value);
      }
      return true;
    }


  /** Accept the visitor. **/
  public Object jjtAccept(parserGrammarVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=5934937377cdd6ddb2592f7f494ac539 (do not edit this line) */
