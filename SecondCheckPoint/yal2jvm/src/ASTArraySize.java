/* Generated By:JJTree: Do not edit this line. ASTArraySize.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTArraySize extends SimpleNode {
  private String name;


  public ASTArraySize(int id) {
    super(id);
  }

  public ASTArraySize(parserGrammar p, int id) {
    super(p, id);
  }

  public String getName() {
	  return name;
  }

  public void setName(String name) {
	  this.name = name;
  }

  public String toString() {
	  String test = super.toString();

	  if(name != null)
		  test+= " " + name;

	  return test;
  }

  @Override
  public boolean analyse(SymbolsTable currentTable){

    if(name==null){
			System.out.println("Name of ArraySize is null");
			analyseContent(currentTable);
		}

		System.out.println("Name of ArraySize isn't null");

    return true;
  }

  @Override
  public boolean analyseContent(SymbolsTable currentTable){
		System.out.println("Analyse children of ArraySize");

    for(int i=0; i < jjtGetNumChildren();i++){
      jjtGetChild(i).analyse(currentTable);
    }

    return true;
  }

	public boolean analyseRhs(SymbolsTable currentTable){
		System.out.println("Analyse the right part of ArraySize");
		return false;
	}

  /** Accept the visitor. **/
  public Object jjtAccept(parserGrammarVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=2b088c535cc9d6a61af5234e1b82343f (do not edit this line) */
